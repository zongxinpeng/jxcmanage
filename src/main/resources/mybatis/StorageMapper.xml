<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxc.jxcmanage.code.mapper.StorageMapper">
  <resultMap id="BaseResultMap" type="com.jxc.jxcmanage.code.entity.Storage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="supplier_mobile" jdbcType="VARCHAR" property="supplierMobile" />
    <result column="express_mobile" jdbcType="VARCHAR" property="expressMobile" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="deliverer" jdbcType="VARCHAR" property="deliverer" />
    <result column="deliver_date" jdbcType="VARCHAR" property="deliverDate" />
    <result column="receive_date" jdbcType="VARCHAR" property="receiveDate" />
    <result column="batch" jdbcType="VARCHAR" property="batch" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="updated_date" jdbcType="TIMESTAMP" property="updatedDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, supplier_id, amount, supplier_mobile, express_mobile, receiver, deliverer, deliver_date, 
    receive_date, batch, note, `status`, created_by, updated_by, created_date, updated_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from storage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from storage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jxc.jxcmanage.code.entity.Storage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into storage (supplier_id, amount, supplier_mobile, 
      express_mobile, receiver, deliverer, 
      deliver_date, receive_date, batch, 
      note, `status`, created_by, 
      updated_by, created_date, updated_date
      )
    values (#{supplierId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{supplierMobile,jdbcType=VARCHAR}, 
      #{expressMobile,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{deliverer,jdbcType=VARCHAR}, 
      #{deliverDate,jdbcType=VARCHAR}, #{receiveDate,jdbcType=VARCHAR}, #{batch,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{updatedDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jxc.jxcmanage.code.entity.Storage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into storage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="supplierMobile != null">
        supplier_mobile,
      </if>
      <if test="expressMobile != null">
        express_mobile,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="deliverer != null">
        deliverer,
      </if>
      <if test="deliverDate != null">
        deliver_date,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="batch != null">
        batch,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="updatedDate != null">
        updated_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="supplierMobile != null">
        #{supplierMobile,jdbcType=VARCHAR},
      </if>
      <if test="expressMobile != null">
        #{expressMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="deliverer != null">
        #{deliverer,jdbcType=VARCHAR},
      </if>
      <if test="deliverDate != null">
        #{deliverDate,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=VARCHAR},
      </if>
      <if test="batch != null">
        #{batch,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxc.jxcmanage.code.entity.Storage">
    update storage
    <set>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="supplierMobile != null">
        supplier_mobile = #{supplierMobile,jdbcType=VARCHAR},
      </if>
      <if test="expressMobile != null">
        express_mobile = #{expressMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="deliverer != null">
        deliverer = #{deliverer,jdbcType=VARCHAR},
      </if>
      <if test="deliverDate != null">
        deliver_date = #{deliverDate,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=VARCHAR},
      </if>
      <if test="batch != null">
        batch = #{batch,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedDate != null">
        updated_date = #{updatedDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxc.jxcmanage.code.entity.Storage">
    update storage
    set supplier_id = #{supplierId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      supplier_mobile = #{supplierMobile,jdbcType=VARCHAR},
      express_mobile = #{expressMobile,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      deliverer = #{deliverer,jdbcType=VARCHAR},
      deliver_date = #{deliverDate,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=VARCHAR},
      batch = #{batch,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      updated_date = #{updatedDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>